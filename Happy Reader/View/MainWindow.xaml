<Window
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:viewModel="clr-namespace:Happy_Reader.ViewModel"
    xmlns:tabs="clr-namespace:Happy_Reader.View.Tabs"
    x:Class="Happy_Reader.View.MainWindow"
    mc:Ignorable="d"
    Title="Happy Reader" MinWidth="800" MinHeight="600" Width="800" Height="600"  
    Loaded="Window_Loaded"
    Closing="MainWindow_OnClosing"
    Icon="/Happy Reader;component/Resources/logo-hr.png" d:DataContext="{d:DesignInstance viewModel:MainWindowViewModel}">
	<Window.Resources>
		<Style TargetType="TabItem">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="TabItem">
						<Border Name="Border" Padding="0,2,0,0" Background="LightBlue" Margin="-2,-2,0,0" Width="100" Height="50">
							<ContentPresenter x:Name="ContentSite" VerticalAlignment="Center" HorizontalAlignment="Center" ContentSource="Header" />
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsSelected" Value="True">
								<Setter Property="Panel.ZIndex" Value="100"/>
								<Setter TargetName="Border" Property="Background" Value="AliceBlue" />
								<Setter TargetName="Border" Property="BorderThickness" Value="1" />
								<Setter TargetName="Border" Property="BorderBrush" Value="Black" />
								<Setter TargetName="ContentSite" Property="TextBlock.FontWeight" Value="Bold" />
							</Trigger>
							<Trigger Property="IsMouseOver" Value="True">
								<Setter Property="Panel.ZIndex" Value="100"/>
								<Setter TargetName="Border" Property="BorderThickness" Value="1" />
								<Setter TargetName="Border" Property="BorderBrush" Value="Black" />
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="ContainerStyle" TargetType="{x:Type GroupItem}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type GroupItem}">
						<!-- ReSharper disable once Xaml.BindingWithContextNotResolved -->
						<Expander IsExpanded="True">
							<Expander.Header>
								<TextBlock>
									<TextBlock.Text>
										<MultiBinding StringFormat="{}{0} ({1} Items)">
											<Binding Path="Name"/>
											<Binding Path="ItemCount" />
										</MultiBinding>
									</TextBlock.Text>
								</TextBlock>
							</Expander.Header>
							<ItemsPresenter />
						</Expander>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style TargetType="ListBoxItem">
			<Setter Property="HorizontalContentAlignment" Value="Left"/>
			<Setter Property="VerticalContentAlignment" Value="Center"/>
		</Style>
	</Window.Resources>
	<Grid Background="#FF2E4876">
		<Grid.RowDefinitions>
			<RowDefinition Height="*"/>
			<RowDefinition Height="Auto"/>
		</Grid.RowDefinitions>
		<TabControl Grid.Row="0" x:Name="MainTabControl" Padding="0" TabStripPlacement="Left">
			<TabItem Header="Games" >
				<Grid Background="#FFC9E1F5" AllowDrop="True" Drop="DropFileOnGamesTab">
					<ListBox x:Name="GameFiles"  Margin="10,10,10,53" MouseDoubleClick="GameFiles_MouseDoubleClick" ItemsSource="{Binding UserGameItems}" ScrollViewer.HorizontalScrollBarVisibility="Disabled">
						<ListBox.GroupStyle>
							<GroupStyle x:Name="UserGamesGroupStyle"  ContainerStyle="{StaticResource ContainerStyle}">
							</GroupStyle>
						</ListBox.GroupStyle>
						<ListBox.ItemsPanel>
							<ItemsPanelTemplate>
								<WrapPanel />
							</ItemsPanelTemplate>
						</ListBox.ItemsPanel>
						<ListBox.ItemContainerStyle>
							<Style TargetType="{x:Type ListBoxItem}">
								<Setter Property="HorizontalContentAlignment" Value="Left"/>
								<Setter Property="VerticalContentAlignment" Value="Center"/>
							</Style>
						</ListBox.ItemContainerStyle>
					</ListBox>
					<Grid Height="53" VerticalAlignment="Bottom">
						<Grid.RowDefinitions>
							<RowDefinition/>
							<RowDefinition/>
						</Grid.RowDefinitions>
						<Grid.ColumnDefinitions>
							<ColumnDefinition/>
							<ColumnDefinition/>
							<ColumnDefinition/>
							<ColumnDefinition/>
							<ColumnDefinition/>
						</Grid.ColumnDefinitions>
						<Button Margin="2" Grid.Row="0" Grid.Column="0" Content="By Added" Click="GroupByAdded" />
						<Button Margin="2" Grid.Row="1" Grid.Column="0" Content="By Producer" Click="GroupByProducer" />
						<Button Margin="2" Grid.Row="0" Grid.Column="1" Content="By Month" Click="GroupByMonth" />
						<Button Margin="2" Grid.Row="1" Grid.Column="1" Content="By Name" Click="GroupByName" />
						<Button Margin="2" Grid.Row="0" Grid.Column="2" Content="By Last Played"  Click="GroupByLastPlayed" />
						<Button Margin="2" Grid.Row="1" Grid.Column="2" Content="By Time Played"  Click="GroupByTimePlayed" />
						<CheckBox Margin="2" Grid.Row="0" Grid.Column="3" Content="Show File Not Found" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" IsChecked="{Binding ShowFileNotFound}" />
						<CheckBox Margin="2" Grid.Row="1" Grid.Column="3" Content="Capture Clipboard" HorizontalContentAlignment="Center" VerticalContentAlignment="Center"  IsChecked="{Binding CaptureClipboard}" />
						<Button Margin="2" Grid.Row="0" Grid.Column="4" Content="By Tag"  Click="GroupByTag" />
						<TextBlock Margin="2" Grid.Row="1" Grid.Column="4" Text="{Binding UserGameItems.Count, StringFormat={}{0} Items.}" Background="Aquamarine" TextAlignment="Center" />
					</Grid>
				</Grid>
			</TabItem>
			<TabItem Header="ITHVNR" x:Name="IthTabItem">
				<tabs:IthVnrTab DataContext="{Binding IthViewModel}"/>
			</TabItem>
			<TabItem Header="Entries" x:Name="EntriesTabItem">
				<Grid>
					<CheckBox Content="Game-only" HorizontalAlignment="Left" VerticalAlignment="Top" IsChecked="{Binding OnlyGameEntries, Mode=TwoWay}"/>
					<Button Content="Add Entry" Margin="83,0,0,0" VerticalAlignment="Top" Click="AddEntry_Click" HorizontalAlignment="Left" Width="90"/>
					<DataGrid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" ItemsSource="{Binding EntriesList}" Margin="0,25,0,0" AutoGenerateColumns="False" CanUserAddRows="False" IsReadOnly="False" >
						<DataGrid.Columns>
							<DataGridTextColumn Header="Id" Binding="{Binding Id, Mode=OneWay}" />
							<DataGridTextColumn Header="User" Binding="{Binding User, Mode=OneWay}" />
							<DataGridTextColumn Header="Type" Binding="{Binding Type}" />
							<DataGridTextColumn Header="Game" Binding="{Binding Game}" />
							<DataGridTextColumn Header="Role" Binding="{Binding Role}" />
							<DataGridTextColumn Header="Input" Binding="{Binding Input}" />
							<DataGridTextColumn Header="Output" Binding="{Binding Output, Mode=TwoWay}"  />
							<DataGridTextColumn Header="Series-specific" Binding="{Binding SeriesSpecific}" />
							<DataGridTextColumn Header="Regex" Binding="{Binding Regex}" />
							<DataGridTemplateColumn Header="Delete" >
								<DataGridTemplateColumn.CellTemplate>
									<DataTemplate>
										<Button Width="150" Content="Delete" Click="ClickDeleteButton" Background="CornflowerBlue"/>
									</DataTemplate>
								</DataGridTemplateColumn.CellTemplate>
							</DataGridTemplateColumn>
						</DataGrid.Columns>
					</DataGrid>
				</Grid>
			</TabItem>
			<TabItem Header="Test" x:Name="TestTabItem">
				<tabs:TestTranslationTab DataContext="{Binding TestViewModel}"/>
			</TabItem>
			<TabItem Header="Visual Novels" Style="{StaticResource DatabaseTabItem}">
				<tabs:DatabaseTab DataContext="{Binding DatabaseViewModel}"/>
			</TabItem>
			<TabItem Header="Producers" Style="{StaticResource DatabaseTabItem}">
				<tabs:ProducersTab DataContext="{Binding ProducersViewModel}"/>
			</TabItem>
			<TabItem Header="Characters" Style="{StaticResource DatabaseTabItem}">
				<tabs:CharactersTab DataContext="{Binding CharactersViewModel}"/>
			</TabItem>
			<TabItem Header="Filters">
				<tabs:FiltersTab DataContext="{Binding FiltersViewModel}"/>
			</TabItem>
			<TabItem Header="Info/Settings">
				<tabs:SettingsTab DataContext="{Binding SettingsViewModel}"/>
			</TabItem>
			<TabItem Header="API Log">
				<tabs:ApiLogTab DataContext="{Binding ApiLogViewModel}"/>
			</TabItem>
			<TabItem Header="Logs">
				<DataGrid ItemsSource="{Binding LogsList}" AutoGenerateColumns="False" CanUserAddRows="False" >
					<DataGrid.Columns>
						<DataGridTextColumn Binding="{Binding Timestamp, StringFormat=yyyy-MM-dd}" Header="Date" Width="Auto"/>
						<DataGridTemplateColumn Header="Description" Width="*">
							<DataGridTemplateColumn.CellTemplate>
								<DataTemplate DataType="viewModel:DisplayLog">
									<DataGridCell Content="{Binding Description}"/>
								</DataTemplate>
							</DataGridTemplateColumn.CellTemplate>
						</DataGridTemplateColumn>
					</DataGrid.Columns>
				</DataGrid>
			</TabItem>
		</TabControl>
		<Grid Grid.Row="1" Grid.Column="0" Background="LightSkyBlue" Height="20">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="Auto"/>
				<ColumnDefinition Width="Auto"/>
				<ColumnDefinition Width="*"/>
			</Grid.ColumnDefinitions>
			<Label Grid.Column="0" Foreground="Black" Content="{Binding DisplayUser}" Padding="5,0,25,0" HorizontalContentAlignment="Left" VerticalContentAlignment="Center"/>
			<Label Grid.Column="1" Foreground="Black" Content="{Binding DisplayGame}" Padding="5,0" HorizontalContentAlignment="Left" VerticalContentAlignment="Center"/>
			<Label Grid.Column="2" Foreground="Black" Content="{Binding StatusText}" Padding="0" HorizontalContentAlignment="Right" VerticalContentAlignment="Center"/>
		</Grid>
	</Grid>
</Window>
