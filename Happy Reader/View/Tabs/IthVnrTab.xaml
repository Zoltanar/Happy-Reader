<UserControl x:Class="Happy_Reader.View.Tabs.IthVnrTab"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             mc:Ignorable="d"
             xmlns:viewModel="clr-namespace:Happy_Reader.ViewModel"
             d:DataContext="{d:DesignInstance viewModel:IthViewModel}"
             Loaded="IthVnrTab_OnLoaded" d:DesignHeight="348" d:DesignWidth="593">
	<UserControl.Resources>
		<Style TargetType="ButtonBase" x:Key="ButtonBaseStyle">
			<Setter Property="Foreground" Value="White"/>
			<Setter Property="Background" Value="SaddleBrown"/>
			<Setter Property="Height" Value="17"/>
			<Setter Property="BorderThickness" Value="0"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type ButtonBase}" >
						<Border HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Padding="2,0" Background="{TemplateBinding Background}" >
							<TextBlock Name="ContentPresenter" VerticalAlignment="Center" HorizontalAlignment="Center" Text="{TemplateBinding Content}"/>
						</Border>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
			<Style.Triggers>
				<Trigger Property="IsMouseOver" Value="True">
					<Setter Property="FontWeight" Value="Bold"/>
					<Setter Property="Background" Value="SandyBrown"/>
				</Trigger>
			</Style.Triggers>
		</Style>
		<Style TargetType="ToggleButton" BasedOn="{StaticResource ButtonBaseStyle}">
			<Style.Triggers>
				<Trigger Property="IsChecked" Value="True">
					<Setter Property="Background" Value="DarkRed"/>
				</Trigger>
				<MultiTrigger>
					<MultiTrigger.Conditions>
						<Condition Property="IsMouseOver" Value="True"/>
						<Condition Property="IsChecked" Value="True"/>
					</MultiTrigger.Conditions>
					<MultiTrigger.Setters>
						<Setter Property="Background" Value="PaleVioletRed"/>
					</MultiTrigger.Setters>
				</MultiTrigger>
			</Style.Triggers>
		</Style>
		<Style TargetType="Button" BasedOn="{StaticResource ButtonBaseStyle}"/>
	</UserControl.Resources>
	<Grid Background="Bisque">
		<Grid.RowDefinitions>
			<RowDefinition Height="Auto"/>
			<RowDefinition Height="Auto"/>
			<RowDefinition Height="30"/>
			<RowDefinition Height="*"/>
		</Grid.RowDefinitions>
		<!-- row 0 -->
		<UniformGrid Columns="4" Grid.Row="0" Height="82">
			<Button Margin="5" Content="Turn Off" Click="FinalizeButton"/>
			<Button Margin="5" Content="Turn On"  Click="InitializeButton"/>
			<ToggleButton Margin="5" Content="Merge By Hook Code"  IsChecked="{Binding MergeByHookCode}"/>
			<ToggleButton Margin="5" Content="Global Pause"        IsChecked="{Binding Paused}" />
			<ToggleButton Margin="5" Content="Show Latest Thread"  IsChecked="{Binding HookManager.ShowLatestThread}" />
			<Button Margin="5" Content="Attach To Process" Click="OpenProcessExplorer"/>
			<Button Margin="5" Content="Clear Others"      Command="{Binding ClearOtherThreadsCommand}"/>
			<Button Margin="5" Content="Pause Others"      Command="{Binding PauseOtherThreadsCommand}" />
			<Button Margin="5" Content="Unpause Others"    Command="{Binding UnpauseOtherThreadsCommand}" />
			<Button Margin="5" Content="Don't Post Others" Command="{Binding DontPostOthersCommand}"/>
			<Button Margin="5" Content="Show Output Window" Click="ShowOutputWindow"/>
			<Button Margin="5" Content="Reset Output Window" Click="ResetOutputWindow"/>
		</UniformGrid>
		<!-- row 1 -->
		<ComboBox Grid.Row="1" Margin="5,5,0,5" x:Name="ProcessComboBox" ItemsSource="{Binding DisplayProcesses}" SelectedItem="{Binding SelectedProcess, Mode=TwoWay}"  HorizontalAlignment="Left"  Width="120">
			<ComboBox.ItemContainerStyle>
				<Style TargetType="{x:Type ComboBoxItem}">
					<Setter Property="HorizontalContentAlignment" Value="Left"/>
					<Setter Property="VerticalContentAlignment" Value="Center"/>
				</Style>
			</ComboBox.ItemContainerStyle>
		</ComboBox>
		<TextBox  Grid.Row="1" Margin="130,5,5,5" TextWrapping="Wrap" Text="Enter command here..." KeyUp="EnterCommand"/>
		<!--row 3 -->
		<UniformGrid Grid.Row="2" Rows="1">
			<Button Margin="5" Content="Clear Text"     Command="{Binding ClearThreadCommand}"/>
			<Button Margin="5" Content="Set Hook Code"  Command="{Binding SetHookCodeCommand}"/>
		</UniformGrid>
		<!--row 4 -->
		<!--todo reorganize buttons -->
		<ListBox x:Name="ThreadSelector" ItemsSource="{Binding DisplayThreads}" Margin="5" Grid.Row="3"
		         ScrollViewer.HorizontalScrollBarVisibility="Disabled" ScrollViewer.VerticalScrollBarVisibility="Auto" 
						 ScrollViewer.CanContentScroll="False"
		         Background="{Binding MainTextBoxBackground}">
			<ListBox.ItemContainerStyle>
				<Style TargetType="{x:Type ListBoxItem}">
					<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
					<Setter Property="VerticalContentAlignment" Value="Top"/>
				</Style>
			</ListBox.ItemContainerStyle>
		</ListBox>
	</Grid>
</UserControl>