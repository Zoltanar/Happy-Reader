<Window x:Class="Happy_Reader.View.OutputWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:viewModel="clr-namespace:Happy_Reader.ViewModel"
        xmlns:view="clr-namespace:Happy_Reader.View"
        mc:Ignorable="d"
        Title="Happy Reader Output" Height="216" Width="800" 
        ShowInTaskbar="False" WindowStyle="None" AllowsTransparency="True"  
        Topmost="True" 
        Loaded="OutputWindow_OnLoaded"
        ResizeMode="CanResizeWithGrip"
        SizeChanged="SizeOrLocationChanged" LocationChanged="SizeOrLocationChanged" MouseLeave="OutputWindow_OnMouseLeave"
        Icon="../Resources/logo-hr.ico">
	<Window.DataContext>
		<viewModel:OutputWindowViewModel/>
	</Window.DataContext>
	<Window.Background>
		<SolidColorBrush Color="Black" Opacity="{Binding Value, ElementName=OpacitySlider}"/>
	</Window.Background>
	<Window.Resources>
		<Style TargetType="{x:Type ToggleButton}" x:Key="SettingsButtonStyle">
			<Setter Property="Height" Value="24"/>
			<Setter Property="Background" Value="Transparent"/>
			<Setter Property="Foreground" Value="White"/>
			<Setter Property="FontWeight" Value="Bold"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="ToggleButton">
						<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
							<ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
						</Border>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
			<Style.Triggers>
				<Trigger Property="IsChecked" Value="True">
					<Setter Property="BorderBrush" Value="Gold" />
					<Setter Property="BorderThickness" Value="1.5" />
				</Trigger>
			</Style.Triggers>
		</Style>
		<Style TargetType="ButtonBase" x:Key="MiniIconBaseStyle">
			<Setter Property="Background" Value="LightBlue" />
			<Setter Property="Foreground" Value="Black" />
		</Style>
		<Style TargetType="{x:Type ToggleButton}" x:Key="MiniIconStyle" BasedOn="{StaticResource MiniIconBaseStyle}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="ToggleButton">
						<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
							<ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" ContentStringFormat=""/>
						</Border>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
			<Style.Triggers>
				<Trigger Property="IsChecked" Value="True">
					<Setter Property="BorderBrush" Value="Gold" />
					<Setter Property="BorderThickness" Value="1.5" />
				</Trigger>
			</Style.Triggers>
		</Style>
		<Style TargetType="CheckBox">
			<Setter Property="Foreground" Value="White"/>
			<Setter Property="Height" Value="18"/>
			<Setter Property="VerticalContentAlignment" Value="Center"/>
			<Setter Property="VerticalAlignment" Value="Top"/>
			<Setter Property="FontSize" Value="10"/>
		</Style>
	</Window.Resources>
	<Grid>
		<Grid.ColumnDefinitions>
			<ColumnDefinition/>
			<ColumnDefinition x:Name="SettingsColumn" Width="70"/>
			<ColumnDefinition Width="22"/>
		</Grid.ColumnDefinitions>
		<RichTextBox Grid.Column="0"  Foreground="GreenYellow" x:Name="OutputTextBox" HorizontalContentAlignment="Center" IsReadOnly="True"
                     VerticalContentAlignment="Center" Background="{x:Null}" FontSize="22"  BorderBrush="Transparent" AutoWordSelection="False"
                     MouseMove="OnMouseover">
			<RichTextBox.Effect>
				<DropShadowEffect/>
			</RichTextBox.Effect>
			<RichTextBox.ContextMenu>
				<ContextMenu>
					<MenuItem Header="Add Entry For Text" Command="{Binding AddEntryCommand}" />
					<MenuItem Header="Search On Dictionary" Command="{Binding SearchOnDictionaryCommand}" />
					<MenuItem Header="Ask Jisho (Browser)" Command="{Binding AskJishoCommand}" />
					<MenuItem Header="Copy Original" Click="CopyOriginalClick" />
					<MenuItem Command="ApplicationCommands.Copy" />
					<MenuItem Command="ApplicationCommands.Cut" />
					<MenuItem Command="ApplicationCommands.Paste" />
				</ContextMenu>
			</RichTextBox.ContextMenu>
		</RichTextBox>
		<Grid Column="1" HorizontalAlignment="Right" >
			<DockPanel x:Name="SettingsPanel" LastChildFill="True">
				<Button DockPanel.Dock="Top" Tag="❌,Close" Content="Close" Click="CloseButton_Click" Height="22" Background="Transparent" FontWeight="Bold" BorderBrush="DarkRed" BorderThickness="2" Foreground="White" MouseLeftButtonDown="DragOnMouseButton" />
				<ToggleButton Content="Settings" Tag="S,Settings" DockPanel.Dock="Top"
				              Style="{StaticResource SettingsButtonStyle}"
				              IsChecked="{Binding SettingsOn}" Checked="UpdateSettingToggles" Unchecked="UpdateSettingToggles"/>
				<ToggleButton Style="{StaticResource MiniIconStyle}" Tag="FS,Fullscreen" DockPanel.Dock="Top" Content="Fullscreen" IsChecked="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=view:OutputWindow}, Path=FullScreenOn}" />
				<ToggleButton Style="{StaticResource MiniIconStyle}" Tag="字,Original" DockPanel.Dock="Top" Content="Original" IsChecked="{Binding OriginalOn}" />
				<ToggleButton Style="{StaticResource MiniIconStyle}" Tag="Ro,Romaji" DockPanel.Dock="Top" Content="Romaji" IsChecked="{Binding RomajiOn}" />
				<ToggleButton Style="{StaticResource MiniIconStyle}" Tag="Tr,Translation" DockPanel.Dock="Top" Content="Translation" IsChecked="{Binding TranslationOn}" />
				<ToggleButton Style="{StaticResource MiniIconStyle}" Tag="⏸,Paused" DockPanel.Dock="Top" Content="Paused" IsChecked="{Binding TranslatePaused}" />
				<Button DockPanel.Dock="Top" Style="{StaticResource MiniIconBaseStyle}" Tag="TA,Text Align" Content="Text Align" Click="HorizontalAlignmentClick" />
				<Button DockPanel.Dock="Top" Style="{StaticResource MiniIconBaseStyle}" Tag="VD,Vert Direct" Content="Vert Direct" Click="VerticalAlignmentClick" />
				<DockPanel>
					<Slider Name="OpacitySlider" Orientation="Vertical" Value="0.6" Minimum="0.1" Maximum="1" ValueChanged="OpacityChanged" />
					<TextBlock Text="Opacity" DockPanel.Dock="Right" Foreground="White" TextAlignment="Center" x:Name="OpacityLabel"/>
				</DockPanel>
			</DockPanel>
		</Grid>
		<Label x:Name="DragMeLabel" Grid.Column="2" Content="Drag Me" Foreground="White" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" MouseLeftButtonDown="DragOnMouseButton" Padding="0">
			<Label.Background >
				<SolidColorBrush Color="#66000000" Opacity="{Binding Value, ElementName=OpacitySlider}"/>
			</Label.Background>
			<Label.LayoutTransform>
				<RotateTransform Angle="90"/>
			</Label.LayoutTransform>
		</Label>
		<ResizeGrip x:Name="Resizer" Grid.Column="0" VerticalAlignment="Top" HorizontalAlignment="Left" Margin="17"
                PreviewMouseLeftButtonDown="Resizer_PreviewMouseLeftButtonDown" PreviewMouseMove="Resizer_PreviewMouseMove" PreviewMouseLeftButtonUp="Resizer_PreviewMouseLeftButtonUp">
			<ResizeGrip.RenderTransform>
				<RotateTransform Angle="180"/>
			</ResizeGrip.RenderTransform>
			<ResizeGrip.Style>
				<Style TargetType="ResizeGrip">
					<Style.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter  Property="Opacity" Value="1.0"/>
							<Setter Property="Cursor" Value="SizeNWSE"/>
						</Trigger>
					</Style.Triggers>
				</Style>
			</ResizeGrip.Style>
		</ResizeGrip>
	</Grid>
</Window>
